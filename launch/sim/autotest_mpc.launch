<?xml version="1.0" encoding="utf-8"?>
<launch>
 <arg default="dispersion" name="tg"/>
 <arg default="car1" name="car1_name"/>
 <arg default="car2" name="car2_name"/>
 <arg default="car3" name="car3_name"/>
 <arg default="car4" name="car4_name"/>
 <arg default="waypoints" name="path_topic"/>
 <arg default="/car_pose" name="car_pose"/>
 <arg default="1" name="map_server"/>
 <arg default="clcbs_data_0" name="bag_name"/>
 <arg default="/clcbs_data_test_1" name="record_name"/>
 <arg default="/home/stark/catkin_mushr/src/mushr_pixelart_mpc/bags/CLCBS+MPC" name="output_dir"/>
 <group if="$(arg map_server)">
  <include file="$(find mushr_sim)/launch/map_server.launch"/>
 </group>
 <node args="-a -o $(arg output_dir)/$(arg record_name).bag" name="rosbag_record" output="screen" pkg="rosbag" type="record"/>
 <group ns="$(arg car1_name)">
  <include file="$(find mushr_sim)/launch/single_car.launch">
   <arg name="car_name" value="$(arg car1_name)"/>
   <arg name="racecar_version" value="racecar-uw-nano"/>
   <arg name="racecar_color" value=""/>
  </include>
  <node name="rhcontroller" output="screen" pkg="mushr_pixelart_mpc" type="rhcnode.py">
   <env name="RHC_USE_CUDA" value="0"/>
   <param name="inferred_pose_t" value="car_pose"/>
   <param name="car_name" value="$(arg car1_name)"/>
   <param name="path_topic" value="$(arg path_topic)"/>
   <param name="car_pose" value="/$(arg car1_name)$(arg car_pose)"/>
   <rosparam file="$(find mushr_pixelart_mpc)/config/trajgen/$(arg tg).yaml"/>
   <rosparam file="$(find mushr_pixelart_mpc)/config/config.yaml"/>
   <rosparam file="$(find mushr_pixelart_mpc)/config/sim.yaml"/>
  </node>
 </group>
 <group ns="$(arg car2_name)">
  <include file="$(find mushr_sim)/launch/single_car.launch">
   <arg name="car_name" value="$(arg car2_name)"/>
   <arg name="racecar_version" value="racecar-uw-nano"/>
   <arg name="racecar_color" value="-green-black"/>
  </include>
  <node name="rhcontroller" pkg="mushr_pixelart_mpc" type="rhcnode.py">
   <env name="RHC_USE_CUDA" value="0"/>
   <param name="inferred_pose_t" value="car_pose"/>
   <param name="car_name" value="$(arg car2_name)"/>
   <param name="path_topic" value="$(arg path_topic)"/>
   <param name="car_pose" value="/$(arg car2_name)$(arg car_pose)"/>
   <rosparam file="$(find mushr_pixelart_mpc)/config/trajgen/$(arg tg).yaml"/>
   <rosparam file="$(find mushr_pixelart_mpc)/config/config.yaml"/>
   <rosparam file="$(find mushr_pixelart_mpc)/config/sim.yaml"/>
  </node>
 </group>
 <group ns="$(arg car3_name)">
  <include file="$(find mushr_sim)/launch/single_car.launch">
   <arg name="car_name" value="$(arg car3_name)"/>
   <arg name="racecar_version" value="racecar-uw-nano"/>
   <arg name="racecar_color" value="-red-white"/>
  </include>
  <node name="rhcontroller" pkg="mushr_pixelart_mpc" type="rhcnode.py">
   <env name="RHC_USE_CUDA" value="0"/>
   <param name="inferred_pose_t" value="car_pose"/>
   <param name="car_name" value="$(arg car3_name)"/>
   <param name="path_topic" value="$(arg path_topic)"/>
   <param name="car_pose" value="/$(arg car3_name)$(arg car_pose)"/>
   <rosparam file="$(find mushr_pixelart_mpc)/config/trajgen/$(arg tg).yaml"/>
   <rosparam file="$(find mushr_pixelart_mpc)/config/config.yaml"/>
   <rosparam file="$(find mushr_pixelart_mpc)/config/sim.yaml"/>
  </node>
 </group>
 <group ns="$(arg car4_name)">
  <include file="$(find mushr_sim)/launch/single_car.launch">
   <arg name="car_name" value="$(arg car4_name)"/>
   <arg name="racecar_version" value="racecar-uw-nano"/>
   <arg name="racecar_color" value="-purple-gold"/>
  </include>
  <node name="rhcontroller" pkg="mushr_pixelart_mpc" type="rhcnode.py">
   <env name="RHC_USE_CUDA" value="0"/>
   <param name="inferred_pose_t" value="car_pose"/>
   <param name="car_name" value="$(arg car4_name)"/>
   <param name="path_topic" value="$(arg path_topic)"/>
   <param name="car_pose" value="/$(arg car4_name)$(arg car_pose)"/>
   <rosparam file="$(find mushr_pixelart_mpc)/config/trajgen/$(arg tg).yaml"/>
   <rosparam file="$(find mushr_pixelart_mpc)/config/config.yaml"/>
   <rosparam file="$(find mushr_pixelart_mpc)/config/sim.yaml"/>
  </node>
 </group>
</launch>